import ejp_scraper
from collections import OrderedDict
import io, datetime

def test_scraped_rows():
    fixture = '''ms,type,country,senior_editor,initial_qc_dt,initial_decision,initial_decision_dt,reviewing_editor,full_qc_dt,full_decision,full_decision_dt,rev1_qc_dt,rev1_decision,rev1_decision_dt,rev2_qc_dt,rev2_decision,rev2_decision_dt,rev3_qc_dt,rev3_decision,rev3_decision_dt,rev4_qc_dt,rev4_decision,rev4_decision_dt,p.poa_dt,p.vor_dt
0,RA,,,,,,,2018-01-01,"Simple Withdraw",2018-01-02,,,,,,,,,,,,,,
1,RA,"Australia",888,2012-01-01,"Encourage Full Submission",2012-01-02,1141,2012-01-03,"Reject Full Submission",2012-01-04,,,,,,,,,,,,,,
2,RA,"New Zealand",999,2012-01-05,"Encourage Full Submission",2012-01-06,0000,2012-01-06,"Reject Full Submission",2012-01-07,,,,,,,,,,,,,,
3,RA,"Singapore",222,2012-01-08,"Encourage Full Submission",2012-01-09,333,2012-01-09,"Revise Full Submission",2012-01-10,2012-01-11,"Accept Full Submission",2012-01-12,,,,,,,,,,,
4,RA,"Malaysia",444,2012-01-13,"Reject Initial Submission",2012-01-14,,,,,,,,,,,,,,,,,,
5,RA,"Thailand",555,2012-01-15,"Encourage Full Submission",2012-01-16,666,2012-01-17,"Revise Full Submission",2012-01-18,2012-01-19,"Accept Full Submission",2012-01-20,,,,,,,,,,,
'''
    expected = [
        OrderedDict([
            ('manuscript_id', '0'),
            ('ejp_type', 'RA'),
            ('date_initial_qc', None),
            ('date_initial_decision', None),
            ('initial_decision', None),
            ('date_full_qc', datetime.datetime(2018, 1, 1, 0, 0)),
            ('date_full_decision', datetime.datetime(2018, 1, 2, 0, 0)),
            ('decision', 'SW'),
            ('date_rev1_qc', None),
            ('date_rev1_decision', None),
            ('rev1_decision', None),
            ('date_rev2_qc', None),
            ('date_rev2_decision', None),
            ('rev2_decision', None),
            ('date_rev3_qc', None),
            ('date_rev3_decision', None),
            ('rev3_decision', None),
            ('date_rev4_qc', None),
            ('date_rev4_decision', None),
            ('rev4_decision', None)]),
        OrderedDict([
            ('manuscript_id', '1'),
            ('ejp_type', 'RA'),
            ('date_initial_qc', datetime.datetime(2012, 1, 1, 0, 0)),
            ('date_initial_decision', datetime.datetime(2012, 1, 2, 0, 0)),
            ('initial_decision', 'EF'),
            ('date_full_qc', datetime.datetime(2012, 1, 3, 0, 0)),
            ('date_full_decision', datetime.datetime(2012, 1, 4, 0, 0)),
            ('decision', 'RJF'),
            ('date_rev1_qc', None),
            ('date_rev1_decision', None),
            ('rev1_decision', None),
            ('date_rev2_qc', None),
            ('date_rev2_decision', None),
            ('rev2_decision', None),
            ('date_rev3_qc', None),
            ('date_rev3_decision', None),
            ('rev3_decision', None),
            ('date_rev4_qc', None),
            ('date_rev4_decision', None),
            ('rev4_decision', None)]),
        OrderedDict([
            ('manuscript_id', '2'),
            ('ejp_type', 'RA'),
            ('date_initial_qc', datetime.datetime(2012, 1, 5, 0, 0)),
            ('date_initial_decision', datetime.datetime(2012, 1, 6, 0, 0)),
            ('initial_decision', 'EF'),
            ('date_full_qc', datetime.datetime(2012, 1, 6, 0, 0)),
            ('date_full_decision', datetime.datetime(2012, 1, 7, 0, 0)),
            ('decision', 'RJF'),
            ('date_rev1_qc', None),
            ('date_rev1_decision', None),
            ('rev1_decision', None),
            ('date_rev2_qc', None),
            ('date_rev2_decision', None),
            ('rev2_decision', None),
            ('date_rev3_qc', None),
            ('date_rev3_decision', None),
            ('rev3_decision', None),
            ('date_rev4_qc', None),
            ('date_rev4_decision', None),
            ('rev4_decision', None)]),
        OrderedDict([
            ('manuscript_id', '3'),
            ('ejp_type', 'RA'),
            ('date_initial_qc', datetime.datetime(2012, 1, 8, 0, 0)),
            ('date_initial_decision', datetime.datetime(2012, 1, 9, 0, 0)),
            ('initial_decision', 'EF'),
            ('date_full_qc', datetime.datetime(2012, 1, 9, 0, 0)),
            ('date_full_decision', datetime.datetime(2012, 1, 10, 0, 0)),
            ('decision', 'RVF'),
            ('date_rev1_qc', datetime.datetime(2012, 1, 11, 0, 0)),
            ('date_rev1_decision', datetime.datetime(2012, 1, 12, 0, 0)),
            ('rev1_decision', 'AF'),
            ('date_rev2_qc', None),
            ('date_rev2_decision', None),
            ('rev2_decision', None),
            ('date_rev3_qc', None),
            ('date_rev3_decision', None),
            ('rev3_decision', None),
            ('date_rev4_qc', None),
            ('date_rev4_decision', None),
            ('rev4_decision', None)]),
        OrderedDict([
            ('manuscript_id', '4'),
            ('ejp_type', 'RA'),
            ('date_initial_qc', datetime.datetime(2012, 1, 13, 0, 0)),
            ('date_initial_decision', datetime.datetime(2012, 1, 14, 0, 0)),
            ('initial_decision', 'RJI'),
            ('date_full_qc', None),
            ('date_full_decision', None),
            ('decision', None),
            ('date_rev1_qc', None),
            ('date_rev1_decision', None),
            ('rev1_decision', None),
            ('date_rev2_qc', None),
            ('date_rev2_decision', None),
            ('rev2_decision', None),
            ('date_rev3_qc', None),
            ('date_rev3_decision', None),
            ('rev3_decision', None),
            ('date_rev4_qc', None),
            ('date_rev4_decision', None),
            ('rev4_decision', None)]),
        OrderedDict([
            ('manuscript_id', '5'),
            ('ejp_type', 'RA'),
            ('date_initial_qc', datetime.datetime(2012, 1, 15, 0, 0)),
            ('date_initial_decision', datetime.datetime(2012, 1, 16, 0, 0)),
            ('initial_decision', 'EF'),
            ('date_full_qc', datetime.datetime(2012, 1, 17, 0, 0)),
            ('date_full_decision', datetime.datetime(2012, 1, 18, 0, 0)),
            ('decision', 'RVF'),
            ('date_rev1_qc', datetime.datetime(2012, 1, 19, 0, 0)),
            ('date_rev1_decision', datetime.datetime(2012, 1, 20, 0, 0)),
            ('rev1_decision', 'AF'),
            ('date_rev2_qc', None),
            ('date_rev2_decision', None),
            ('rev2_decision', None),
            ('date_rev3_qc', None),
            ('date_rev3_decision', None),
            ('rev3_decision', None),
            ('date_rev4_qc', None),
            ('date_rev4_decision', None),
            ('rev4_decision', None)])
    ]

    fh = io.StringIO(fixture)
    actual = list(ejp_scraper.scrape(fh))
    from pprint import pprint
    pprint(actual)
    assert expected == actual
